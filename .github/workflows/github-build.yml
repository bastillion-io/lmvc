name: Build

on:
  workflow_dispatch: {}
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "15 * * * *"   # hourly (UTC)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java and import GPG
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'
          cache: maven
          # MUST be an ASCII-armored **private** key block
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          gpg-passphrase:  ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Configure GPG (loopback) & show imported keys
        id: gpg
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo 'allow-loopback-pinentry' >> ~/.gnupg/gpg-agent.conf || true
          gpgconf --kill gpg-agent || true

          echo "== gpg secret keys =="
          gpg --batch --list-secret-keys --keyid-format LONG

          # Extract the first usable signing key id (LONG form)
          KEYID="$(gpg --batch --with-colons --list-secret-keys | awk -F: '$1=="sec" {print $5; exit}')"
          if [[ -z "${KEYID}" ]]; then
            echo "No secret key found after import."
            exit 1
          fi
          echo "Detected KEYID=${KEYID}"
          echo "keyid=${KEYID}" >> "$GITHUB_OUTPUT"

      - name: Build & Verify (sign at verify)
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          GPG_TTY: /dev/tty
        run: |
          mvn --no-transfer-progress -B --update-snapshots \
            -Dgpg.keyname='${{ steps.gpg.outputs.keyid }}' \
            clean verify
